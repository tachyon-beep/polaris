[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/_version.py"
version_scheme = "guess-next-dev"
local_scheme = "dirty-tag"

[project]
name = "polaris"
dynamic = ["version"]
description = "MCP-enabled knowledge graph bridge for large language models"
keywords = ["graph processing", "async", "network analysis", "Python", "LLM", "Artificial Intelligence"]
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "John Morrissey", email = "john@foundryside.dev" }
]
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "aiofiles>=0.7.0",
    "mcp>=1.0.0",
    "networkx>=3.0",
    "pandas>=2.0.0",
    "numpy>=2.1.3",
    "scikit-learn>=1.3.0",
    "aiohttp>=3.8.0",
    "asyncio-extras>=1.3.0",
    "aiosqlite>=0.19.0",
    "pyyaml>=6.0.0",
    "python-dotenv>=1.0.0",
    "jsonschema>=4.19.0",
]

[project.urls]
Repository = "https://github.com/tachyon-beep/polaris"
"Bug Tracker" = "https://github.com/tachyon-beep/polaris/issues"
Wiki = "https://github.com/tachyon-beep/polaris/wiki"
"Discussion Forum" = "https://github.com/tachyon-beep/polaris/discussions"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.19.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
    "pylint>=2.17.0",
    "types-setuptools>=68.0.0",
    "typing-extensions>=4.7.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0",
    "ipython>=8.0.0",
    "pip-tools>=7.0.0",
    "pre-commit>=3.3.0",
    "pip-audit>=2.4.0",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=src"
testpaths = [
    "tests",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.black]
line-length = 100
target-version = ['py312']
include = '\\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
src_paths = ["src", "tests"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
strict = true
plugins = []

[tool.sphinx]
source_suffix = [".rst", ".md"]
extensions = ["myst_parser"]

[tool.flake8]
max-line-length = 100
extend-ignore = [
    "E203",
    "W503",
    "E503"
]
exclude = [
    "__pycache__",
    ".git",
    ".venv",
    "build",
    "dist",
    "src/_version.py",
]
